@using Eentities
@using Bbusiness


@inject NavigationManager NavManager

<div class="form-container">
    <EditForm Model="oProduct">
        <div class="form-group" >
            <label class="bold-label">Referencia:</label>
            <InputText @bind-Value="oProduct.ProductId" class="form-control" />
        </div>
        <div class="form-group">
            <label class="bold-label">Nombre del producto:</label>
            <InputText @bind-Value="oProduct.ProductName" class="form-control" />
        </div>
        <div class="form-group">
            <label class="bold-label">Descripción:</label>
            <InputTextArea @bind-Value="oProduct.ProductDescription" class="form-control" />
        </div>
        <div class="form-group">
            <label class="bold-label">Categoría:</label>
            <InputSelect @bind-Value="oProduct.CategoryId" class="form-control">
                <option value="">Seleccionar categoría..</option>
                @foreach (var category in categories)
                {
                    <option value="@category.CategoryId">@category.CategoryName</option>
                }
            </InputSelect>
        </div>

        <input type="button" value="Agregar Producto" @onclick="SaveProduct" class="form-control btn btn-warning form-button" />
    </EditForm>
</div>

@code {
    ProductEntity oProduct = new ProductEntity();

    List<CategoryEntity> categories = new List<CategoryEntity>();

    protected override async Task OnInitializedAsync()
    {
        categories = B_Category.CategoryList();

        await Task.CompletedTask;
    }

    private void SaveProduct()
    {
        
        try
        {
            if (B_Product.ProductList().Any(p => p.ProductId == oProduct.ProductId))
            {
                Console.WriteLine("El ProductId ya existe. Por favor, elija otro.");
                return;
            }

            B_Product.CreateProduct(oProduct);
            NavManager.NavigateTo("product/list");
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error al guardar el producto: " + ex.Message);
            if (ex.InnerException != null)
            {
                Console.WriteLine("Inner Exception: " + ex.InnerException.Message);
            }
        }



        // B_Product.CreateProduct(oProduct);
        // NavManager.NavigateTo("product/list");
    }
}

